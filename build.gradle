import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.3'
    id 'io.github.patrick.remapper' version '1.4.2'
}

group = 'it.jakegblp'
version = '1.0.0-beta1'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://jitpack.io/" }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = "https://repo.destroystokyo.com/repository/maven-public/" }
}

dependencies {
    implementation project(":factory")
    implementation project(":common")
    implementation "dev.jorel:commandapi-bukkit-shade:9.7.0"
    annotationProcessor "dev.jorel:commandapi-annotations:9.7.0"
    compileOnly "org.spigotmc:spigot-api:1.21.7-R0.1-SNAPSHOT"

    compileOnly 'it.unimi.dsi:fastutil:8.5.15'
    implementation "net.kyori:adventure-platform-bukkit:4.4.0"
    implementation "net.kyori:adventure-text-minimessage:4.23.0"
    implementation 'com.github.zafarkhaja:java-semver:0.10.2'
    implementation("org.jspecify:jspecify:1.0.0")
    compileOnly 'org.jetbrains:annotations:20.1.0'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

processResources {
    filteringCharset = 'UTF-8'
    filter(ReplaceTokens, tokens: [version: version])
}

shadowJar {
    archiveClassifier.set("")
    relocate("dev.jorel.commandapi", "it.jakegblp.nms.libraries.commandapi")
    relocate("net.kyori.adventure", "it.jakegblp.nms.libraries.adventure")
    relocate("net.kyori.option", "it.jakegblp.nms.libraries.option")
    relocate("com.github.zafarkhaja.semver", "it.jakegblp.nms.libraries.semver")
}

build {
    dependsOn shadowJar
    //doLast {
    //    subprojects.each { subproject ->
    //        subproject.tasks.matching { it.name == "build" }.configureEach {
    //            doLast {
    //                delete subproject.layout.buildDirectory
    //            }
    //        }
    //    }
    //}
}

allprojects {

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(16)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release = 16
    }
}